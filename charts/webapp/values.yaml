replicaCount: 1

env:
  []
  # - name: SOME_CONFIG
  #   value: value
  # - name: SOME_SECRET_CONFIG
  #   valueFrom:
  #    secretKeyRef:
  #      name: secret-name
  #      key: secret-key

image:
  repository: "todo"
  tag: "todo"
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the name template
  name: ""

podAnnotations: {}

deploymentAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

containerPort: 8080

livenessProbe:
  httpGet:
    path: /
    port: http

readinessProbe:
  httpGet:
    path: /
    port: http

# deprecated: use ingresses
ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

ingresses:
  []
  # - name: ""
  #   className: ""
  #   annotations: {}
  #     # kubernetes.io/ingress.class: nginx
  #     # kubernetes.io/tls-acme: "true"
  #   hosts:
  #     - host: chart-example.local
  #       paths:
  #         - path: /
  #           pathType: ImplementationSpecific
  #   tls: []
  #   #  - secretName: chart-example-tls
  #   #    hosts:
  #   #      - chart-example.local

resources:
  {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# DEPRECATED: use volumes instead
#
# optional can be enabled to mount a persistent volume
# can create a pvc with the given info or use an
# existing one if persistence.existingClaim is set
persistence:
  enabled: false
  name: data
  storageClass: ""
  annotations: {}
  existingClaim: ""
  accessMode: ReadWriteOnce
  accessModes: []
  size: 10Gi
  mountPath: /data
  subPath: ""

# optional can be enabled to mount a persistent volumes.
# can create a pvc with the given info or use an
# existing one if persistence.existingClaim is set
volumes:
  []
  # - enabled: false
  #   name: data
  #   storageClass: ""
  #   annotations: {}
  #   claimName: ""
  #   existingClaim: ""
  #   accessMode: ReadWriteOnce
  #   accessModes: []
  #   size: 10Gi
  #   mountPath: /data
  #   subPath: ""

# optional value to mount secrets as a volume
secretMounts:
  []
  # - secretName: ""
  #   mountPath: ""
